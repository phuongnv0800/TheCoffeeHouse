@page "/quantity-product-report-branch"
@inject IConfiguration Configuration
@inject IOrderService orderService;
@inject IToastService toastService
@inject IJSRuntime jsRuntime;
@inject IBrandService branchService
@inject IUserApiClient userApiClient;
@inject IUserService userServices
@inject IProductService productService
@attribute [Authorize]

<div class="page d-flex flex-row flex-column-fluid">
    <div class="wrapper d-flex flex-column flex-row-fluid mt-5" id="kt_wrapper">

        <div class="content flex-column flex-column-fluid" id="kt_content">
            <div class="card card-flush " style="">
                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                    <div class="card-title">
                        <div class="d-flex align-items-center position-relative my-1">
                            <span class="svg-icon svg-icon-1 position-absolute ms-4">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                    <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black"></rect>
                                    <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="black"></path>
                                </svg>
                            </span>
                            <div class="card-title">
                                <div class="d-flex align-items-center position-relative my-1">
                                    <span class="svg-icon svg-icon-1 position-absolute ms-4">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                            <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black"></rect>
                                            <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="black"></path>
                                        </svg>
                                    </span>
                                    @if (dateRequest != null)
                                    {
                                        <EditForm Model="dateRequest" OnValidSubmit="SearchByText" class="d-flex">
                                            <InputDate @bind-Value="dateRequest.FromDate" class="form-control form-control-solid " placeholder="Ngày đầu"/>
                                            <InputDate @bind-Value="dateRequest.ToDate" class="form-control ms-2 form-control-solid " placeholder="Ngày cuốith"/>
                                            <button onclick="@(() => SearchByText())"
                                                    class="btn btn-primary  ms-2" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                                Tìm kiếm
                                            </button>
                                        </EditForm>
                                    }
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
                <div class="card-body pt-0">

                    <RadzenChart>
                        <RadzenBarSeries Data="@items" CategoryProperty="Quarter" Title="Lượng sản phẩm" ValueProperty="Revenue">

                        </RadzenBarSeries>

                        <RadzenValueAxis>
                            @*<RadzenGridLines Visible="true" />*@
                            <RadzenAxisTitle Text="Lượng tiêu thụ"/>
                        </RadzenValueAxis>
                    </RadzenChart>


                </div>
            </div>
            <div class="card card-flush ">
                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                    <div class="card-title">
                        <div class="d-flex align-items-center position-relative my-1">
                            <span class="svg-icon svg-icon-1 position-absolute ms-4">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                    <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black"></rect>
                                    <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="black"></path>
                                </svg>
                            </span>
                            <EditForm Model="searchText" OnValidSubmit="SearchByText">
                                <InputText @bind-Value="searchText" type="text" data-kt-ecommerce-category-filter="search" class="form-control form-control-solid w-450px ps-14" placeholder="Tìm kiếm chinh nhánh theo tên"/>
                            </EditForm>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-0">

                    <div id="kt_ecommerce_category_table_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
                        <div class="table-responsive">
                            <table class="table align-middle table-row-dashed fs-6 gy-5 dataTable no-footer" id="kt_ecommerce_category_table">
                                <thead>
                                <tr class="text-start text-gray-400 fw-bolder fs-7 text-uppercase gs-0">

                                    <th class="min-w-250px sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" style="width: 637.234px;">
                                        Sản phẩm
                                    </th>
                                    <th class="min-w-150px sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" style="width: 159.297px;">
                                        lượng tiêu thụ
                                    </th>
                                    <th class="min-w-150px sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" style="width: 159.297px;">
                                        đơn vị
                                    </th>
                                </tr>
                                </thead>
                                <tbody class="fw-bold text-gray-600">
                                @if (ProductsList != null)
                                {
                                    foreach (var product in ProductsList)
                                    {
                                        string fileImage = Configuration["BackendApiUrl"] + "/Uploads/" + product.LinkImage;

                                        <tr class="odd">

                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <img height="40" width="40" src="@fileImage">

                                                    <div class="ms-5">
                                                        <a class="text-gray-800 text-hover-primary fs-5 fw-bolder mb-1" data-kt-ecommerce-category-filter="category_name">
                                                            @product.ProductName
                                                        </a>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="ms-5">
                                                    @product.Quantity
                                                </div>
                                            </td>
                                            <td>
                                                <div class="ms-5">
                                                    @product.Unit
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <Spinner Colspan="9"></Spinner>
                                }

                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-1 d-flex align-items-center justify-content-center justify-content-md-start">
                                <div class="dataTables_length" id="kt_ecommerce_category_table_length">
                                    <label>
                                        <EditForm Model="pagination">
                                            <InputSelect @bind-Value="pagination.pageSize" name="kt_ecommerce_category_table_length" aria-controls="kt_ecommerce_category_table" class="form-select form-select-sm form-select-solid">
                                                <option value="10">10</option>
                                                <option value="25">25</option>
                                                <option value="50">50</option>
                                                <option value="100">100</option>
                                            </InputSelect>
                                        </EditForm>
                                    </label>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-11 d-flex align-items-center justify-content-center justify-content-md-end">
                                <div class="dataTables_paginate paging_simple_numbers w-100" id="kt_ecommerce_category_table_paginate">
                                    <Pagination Count="@(pagination.totalPage)" SelectedChanged="Change"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public String Url { get; set; }
    bool smooth = true;

    class DataItem
    {
        public string Quarter { get; set; }
        public double Revenue { get; set; }
    }

    class ListDataItem
    {
        public ProductVm product { get; set; }

        public List<DataItem> listItems { get; set; }
    }

    private List<DataItem> items = new List<DataItem>();
    private List<ListDataItem> lists = new List<ListDataItem>();

    public List<ProductQuantityVm>? ProductsList = new List<ProductQuantityVm>();

    private string? token;
    public string Name;
    private TCH.WebServer.Models.Pagination.Pagination pagination = new();
    private AppUser User;
    private DateRequest dateRequest;
    private string searchText = "";
    private double Sum;

    [CascadingParameter]
    public IModalService Modal { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            Url = Configuration.GetSection("BackendApiUrl").Value;
            dateRequest = new DateRequest()
            {
                FromDate = new DateTime(2022, 06, 01),
                ToDate = DateTime.Now
            };

            var response = await userApiClient.GetById(GbParameter.GbParameter.UserId);
            User = response.Data;
    //Sum = await orderService.GetSum(dateRequest.FromDate, dateRequest.ToDate);
            await Get(1);
            await GetChartBranch();
        }
        catch (Exception ex)
        {
            toastService.ShowError("có lỗi");
        }
    }

    public async Task Get(int pageNumber)
    {
        try
        {
            var response = await orderService.GetQuantiProductsByBranch(true, pagination.pageSize, pagination.PageNumber, User.BranchID, dateRequest.FromDate, dateRequest.ToDate);
            pagination.PageNumber = response.Data.CurrentPage;
            ProductsList = response.Data.Items.ToList();
            pagination.totalPage = response.Data.TotalPages;
            StateHasChanged();
        }
        catch (Exception e)
        {
            toastService.ShowError("Có lỗi");
        }
    }


    public async Task GetChartBranch()
    {
        try
        {
            items = new List<DataItem>();

            foreach (var it in ProductsList)
            {
                DataItem data = new DataItem()
                {
                    Quarter = it.ProductName,
                    Revenue = it.Quantity,
                };
                items.Add(data);
            }
        }
        catch (Exception ex)
        {
            toastService.ShowError("có lỗi");
        }
    }

    public async void Delete(string id)
    {
        await orderService.DeleteOrder(id);
    }

    public async void Change(int link)
    {
        pagination.PageNumber = link;
        await Get(link);
        await GetChartBranch();

        StateHasChanged();
    }

    public async Task SearchByText()
    {
        await Get(pagination.PageNumber);
    }

}

@code {

    public class DateRequest
    {
        public DateTime FromDate { get; set; }
        public DateTime ToDate { get; set; }
    }

}