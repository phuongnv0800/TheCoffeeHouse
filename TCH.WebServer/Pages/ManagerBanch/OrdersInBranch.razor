@page "/orders-branch"
@page "/orders-branch/{branchId}"
@using System.Security.Cryptography.X509Certificates
@inject IOrderService orderService;
@inject IUserService userServices;
@inject NavigationManager navigationManager;
@inject IToastService toastService;
@inject IJSRuntime jsRuntime;
@attribute [Authorize]

<div class="page d-flex flex-row flex-column-fluid">
    <div class="wrapper d-flex flex-column flex-row-fluid" id="kt_wrapper">

        <div class="content d-flex flex-column flex-column-fluid" id="kt_content">

            <div class="card card-flush " style="margin-top: 65px">
                <div class="card-header align-items-center py-5 gap-2 gap-md-5">

                    @if (dateRequest != null)
                    {
                        <EditForm Model="dateRequest" OnValidSubmit="SearchByText" class="row w-100">
                            <div class="col-12 col-md-3 my-1 ms-1"><InputDate @bind-Value="dateRequest.FromDate" class="form-control form-control-solid " placeholder="Ngày đầu" /></div>
                            <div class="col-12 col-md-3 my-1 ms-1">
                                <InputDate @bind-Value="dateRequest.ToDate" class="form-control ms-2 form-control-solid " placeholder="Ngày cuốith" />
                            </div>
                            <div class="col-12 col-md-3 my-1 ms-1">
                                <button onclick="@(() => SearchByText())"
                                    class="btn btn-primary  ms-2" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                    Tìm kiếm
                                </button>
                            </div>
                        </EditForm>
                    }

                </div>
                <div class="card-body pt-0">

                    <div class="row">
                        <div class="col-12">
                            <div class="card-body pt-0">
                                <RadzenChart>
                                    <RadzenLineSeries Smooth="true" Data="@DataSet" CategoryProperty="DateTime" Title="Doanh thu theo cửa hàng" ValueProperty="Revenue">
                                        <RadzenMarkers MarkerType="MarkerType.Square" />
                                    </RadzenLineSeries>

                                    <RadzenCategoryAxis Padding="20" FormatString="{0:dd/MM/yyyy}" />
                                    <RadzenValueA98-xis>
                                        @*<RadzenGridLines Visible="true" />*@
                                        <RadzenAxisTitle Text="Tổng doanh thu" />
                                    </RadzenValueA98-xis>
                                </RadzenChart>
                                <div class="text-end d-flex mt-5">
                                    <h1>Tổng doanh thu: </h1>
                                    <h1 class="text-primary ms-2">@String.Format("{0:0,0 vnđ}", Sum)</h1>
                                    <button class="btn btn-success ms-5" onclick="@(() => ExportExcel())">Xuất Excel</button>
                                </div>
                            </div>
                        </div>
                        <div class="col-12">
                            <div id="kt_ecommerce_category_table_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
                                <div class="table-responsive">
                                    <table class="table align-middle table-row-dashed fs-6 gy-5 dataTable no-footer" id="kt_ecommerce_category_table">
                                        <thead>
                                            <tr class="text-start text-gray-400 fw-bolder fs-7 text-uppercase gs-0">
                                                <th class="w-10px pe-2 sorting_disabled" rowspan="1" colspan="1" aria-label="" style="width: 29.25px;">
                                                    <div class="form-check form-check-sm form-check-custom form-check-solid me-3">
                                                        <input class="form-check-input" type="checkbox" data-kt-check="true" data-kt-check-target="#kt_ecommerce_category_table .form-check-input" value="1">
                                                    </div>
                                                </th>
                                                <th class="sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" aria-label="Category: activate to sort column ascending" style="width: 637.234px;">
                                                    Code
                                                </th>
                                                <th class=" sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" aria-label="Category: activate to sort column ascending" style="width: 637.234px;">
                                                    Bàn phục vụ
                                                </th>
                                                <th class="sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" aria-label="Category: activate to sort column ascending" style="width: 637.234px;">
                                                    Kiểu hoá đơn
                                                </th>
                                                <th class=" sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" aria-label="Category: activate to sort column ascending" style="width: 637.234px;">
                                                    Thời gian tạo
                                                </th>
                                                <th class=" sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" aria-label="Category: activate to sort column ascending" style="width: 637.234px;">
                                                    Tổng tiền
                                                </th>
                                                <th class="text-end min-w-70px sorting_disabled" rowspan="1" colspan="1" aria-label="Actions" style="width: 103.969px;">
                                                    Thao tác
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody class="fw-bold text-gray-600">
                                            @if (ProductsList != null)
                                            {
                                                foreach (var product in ProductsList)
                                                {
                                                    string href = "/orders/" + product.ID;
                                                    <tr class="odd">
                                                        <td>
                                                            <div class="form-check form-check-sm form-check-custom form-check-solid">
                                                                <input class="form-check-input" type="checkbox" value="1">
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="d-flex align-items-center">
                                                                <div class="ms-5">
                                                                    <a href="@href" class="text-gray-800 text-hover-primary fs-5 fw-bolder mb-1" data-kt-ecommerce-category-filter="category_name">
                                                                        @product.Code
                                                                    </a>
                                                                    <div class="text-muted fs-7 fw-bolder">@product.Cashier</div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="d-flex align-items-center">
                                                                <div class="ms-5">
                                                                    <div class="text-muted fs-7 fw-bolder">@product.TableNum</div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="d-flex align-items-center">
                                                                <div class="ms-5">
                                                                    <div class="text-muted fs-7 fw-bolder">@(product.OrderType == OrderType.InPlace ? "Tại cửa hàng" : product.OrderType == OrderType.TakeAway ? "Mang đi" : "Ship")</div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="d-flex align-items-center">
                                                                <div class="ms-5">
                                                                    <div class="text-muted fs-7 fw-bolder">@product.CreateDate.ToShortDateString()</div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="d-flex align-items-center">
                                                                <div class="ms-5">
                                                                    <div class="text-muted fs-7 fw-bolder">@String.Format("{0:0,0 vnđ}", product.TotalAmount)</div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td class="text-end">
                                                            <div class="dropdown">
                                                                <button class="btn btn-light dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                                                    Thao tác
                                                                </button>
                                                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                                                                    <li>
                                                                        <a class="dropdown-item" onclick="@(() => Delete(@product.ID.ToString()))">Xóa</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                            else
                                            {
                                                <Spinner Colspan="8"></Spinner>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-1 d-flex align-items-center justify-content-center justify-content-md-start">
                                        <div class="dataTables_length" id="kt_ecommerce_category_table_length">
                                            <label>
                                                <EditForm Model="pagination">
                                                    <InputSelect @bind-Value="pagination.pageSize" name="kt_ecommerce_category_table_length" aria-controls="kt_ecommerce_category_table" class="form-select form-select-sm form-select-solid">
                                                        <option value="10">10</option>
                                                        <option value="25">25</option>
                                                        <option value="50">50</option>
                                                        <option value="100">100</option>
                                                    </InputSelect>
                                                </EditForm>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-11 d-flex align-items-center justify-content-center justify-content-md-end">
                                        <div class="dataTables_paginate paging_simple_numbers w-100" id="kt_ecommerce_category_table_paginate">
                                            <Pagination Count="@(pagination.totalPage)" SelectedChanged="Change" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }

    [Parameter]
    public string BranchId { get; set; }

    public string UserId { get; set; }
    public List<Order>? ProductsList = new();
    public List<Order>? ChartOrders = new();
    private Models.Pagination.Pagination pagination = new();
    private DateRequest dateRequest;
    private double Sum;
    public List<MoneyByDayDetail> DataSet { get; set; }
    // class DataItem
    // {
    //     public DateTime Date { get; set; }
    //     public double Revenue { get; set; }
    // }
    //
    // private List<DataItem> items = new();

    [CascadingParameter]
    public IModalService Modal { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationState;
        if (authState.User.Identity!.IsAuthenticated)
        {
            if (string.IsNullOrWhiteSpace(BranchId))
            {
                BranchId = authState.User.FindFirst(x => x.Type == ClaimValue.BranhID)!.Value;
            }
            UserId = authState.User.FindFirst(x => x.Type == ClaimTypes.NameIdentifier)!.Value;
        }
        try
        {
            dateRequest = new DateRequest()
                {
                    FromDate = new DateTime(2022, 06, 01),
                    ToDate = DateTime.Now
                };
            await Get(1);
            await GetChart();
        }
        catch (Exception e)
        {
            toastService.ShowError("có lỗi");
        }
    }

    protected override async Task OnParametersSetAsync()
    {
    }

    public async Task Get(int pageNumber)
    {
        try
        {
            var response = await orderService.GetAllOrdersInBranch(true, pagination.pageSize, pageNumber, BranchId, UserId, dateRequest.FromDate, dateRequest.ToDate);
            pagination.PageNumber = response.Data.CurrentPage;
            ProductsList = response.Data.Items.ToList();
            pagination.totalPage = response.Data.TotalPages;
        }
        catch (Exception _e)
        {
            toastService.ShowError("có lỗi");
        }
    }

    public async Task GetChart()
    {
        try
        {
            var response = await orderService.GetAllOrdersInBranch(false, pagination.pageSize, 1, BranchId, UserId, dateRequest.FromDate, dateRequest.ToDate);
            if (response.Result == 1)
            {
                ChartOrders = response.Data.Items.ToList();
                DataSet = response.Data.Items
                    .AsQueryable()
                    .GroupBy(x => x.CreateDate.Date)
                    .Select(x => new MoneyByDayDetail() { DateTime = x.Key, Revenue = x.Sum(i => i.TotalAmount) }).ToList();
                Sum = response.Data.Items.Sum(x => x.TotalAmount);
            }
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.ToString());
        }
    }

    public async void Delete(string id)
    {
        await orderService.DeleteOrder(id);
    }

    public async void Change(int link)
    {
        pagination.PageNumber = link;
        await Get(link);
        StateHasChanged();
    }

    public async Task SearchByText()
    {
        await Get(pagination.PageNumber);

        await GetChart();
    }

    public async Task ExportExcel()
    {
        try
        {
            var fileName = $"OrderReport.xlsx";
            var bytes = await orderService.GetExcelInBranch(BranchId, dateRequest.FromDate, dateRequest.ToDate);
            await jsRuntime.InvokeAsync<object>("saveAsFile", fileName, Convert.ToBase64String(bytes));
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.ToString());
        }
    }

}

@code {

    public class DateRequest
    {
        public DateTime FromDate { get; set; }
        public DateTime ToDate { get; set; }
    }

}