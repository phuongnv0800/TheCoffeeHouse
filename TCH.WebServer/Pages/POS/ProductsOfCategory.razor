@using TCH.WebServer.Models
@using TCH.WebServer.Services.Products

@inject IProductService productServices

<div>
    @if(products != null)
    {
        foreach(var product in products)
        {
            <div class="d-flex align-items-sm-center mb-7">
                <!--begin::Symbol-->
                <div class="symbol symbol-60px symbol-2by3 me-4">
                    <div class="symbol-label" style="background-image: url(@product.LinkImage)"></div>
                </div>
                <!--end::Symbol-->
                <!--begin::Title-->
                <div class="d-flex flex-row-fluid flex-wrap align-items-center">
                    <div class="flex-grow-1 me-2">
                        <a href="#" class="text-gray-800 fw-bolder text-hover-primary fs-6">@product.Name</a>
                        <span class="text-muted fw-bold d-block pt-1">@product.Price</span>
                    </div>
                    <span class="badge badge-light-success fs-8 fw-bolder my-2">Còn hàng</span>
                </div>
            </div>
                <!--end::Title-->
         }
    }
</div>

@code {
    [Parameter]
    public string CategoryId { get; set; }
    private List<Product> products = new List<Product>();
    protected override async  Task OnParametersSetAsync()
    {
        var response = await productServices.GetProductByCategoryId(CategoryId);
        products = response.Data.Items;
        base.OnParametersSet();
	}
}
