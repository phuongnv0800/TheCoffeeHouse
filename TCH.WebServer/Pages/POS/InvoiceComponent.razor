@page "/invoice"
@using TCH.WebServer.Services.Customers
@using TCH.WebServer.Services.Promotions
@inject NavigationManager navigationManager
@inject IProductService productService
@inject IUserService userServices
@inject ICategoryService categoryServices
@inject NavigationManager NavManager
@inject IToastService toastService
@inject IOrderService orderService
@inject ICustomerService customerService
@inject IPromotionService promotionService
@attribute [Authorize]

<div class="page d-flex flex-row flex-column-fluid">
<div class="wrapper d-flex flex-column flex-row-fluid" id="kt_wrapper">

<div class="content d-flex flex-column flex-column-fluid mt-10" id="kt_content">
<!--begin::Layout-->
<div class="d-flex flex-column flex-lg-row">
<!--begin::Content-->
<div class="flex-lg-row-fluid mb-10 mb-lg-0 me-lg-7 me-xl-10">
    @if (order != null)
    {
        <!--begin::Card-->
        <div class="card">
            <!--begin::Card body-->
            <div class="card-body p-12">
                <!--begin::Form-->
                <form action="" id="kt_invoice_form">
                    <!--begin::Separator-->
                    <div class="separator separator-dashed my-10"></div>
                    <!--end::Separator-->
                    <!--begin::Wrapper-->
                    <div class="mb-0">
                        <!--begin::Row-->
                        <div class="row gx-10 mb-5">
                            <!--begin::Col-->
                            <div class="col-lg-12">
                                @if (phone != null)
                                {
                                    <EditForm Model="@phone">
                                        <div class="mb-5">
                                            <InputText @bind-Value="phone" type="text" class="form-control form-control-solid" placeholder="Số điện thoại khách hàng (nếu có)"></InputText>
                                        </div>
                                    </EditForm>
                                }

                                <EditForm Model="@order">
                                    <div class="row">
                                        <div class="col-6">
                                            <label class="form-label fs-6 fw-bolder text-gray-700 mb-3">Số bàn</label>
                                            <!--begin::Input group-->
                                            <div class="mb-5">
                                                <InputNumber @bind-Value="order.TableNum" type="text" class="form-control form-control-solid" placeholder="Số bàn"></InputNumber>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label fs-6 fw-bolder text-gray-700 mb-3">Tiền khách gửi</label>
                                            <div class="mb-5">
                                                <InputNumber @bind-Value="order.CustomerPut" type="text" class="form-control form-control-solid" placeholder="Tiền khách gửi"></InputNumber>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-6">
                                            <label class="form-label fs-6 fw-bolder text-gray-700 mb-3">Phí ship</label>
                                            <div class="mb-5">
                                                <InputNumber @bind-Value="order.ShippingFee" type="text" class="form-control form-control-solid" placeholder="Phí Ship"></InputNumber>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label fs-6 fw-bolder text-gray-700 mb-3">Kiểu bán</label>
                                            <div class="mb-5">
                                                <InputSelect @bind-Value="order.OrderType" class="form-control">
                                                    @foreach (var ice in Enum.GetValues(typeof(OrderType)))
                                                    {
                                                        <option value="@ice">@ice</option>
                                                    }
                                                </InputSelect>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-6"></div>
                                        <div class="col-6"></div>
                                    </div>
                                </EditForm>
                            </div>
                            <!--end::Col-->
                        </div>
                        <!--end::Row-->
                        <!--begin::Table wrapper-->
                        <div class="table-responsive mb-10">
                            <!--begin::Table-->
                            <table class="table g-5 gs-0 mb-0 fw-bolder text-gray-700" data-kt-element="items">
                                <!--begin::Table head-->
                                <thead>
                                <tr class="border-bottom fs-7 fw-bolder text-gray-700 text-uppercase">
                                    <th class="min-w-300px w-475px">món</th>
                                    <th class="min-w-100px w-100px">Số lượng</th>
                                    <th class="min-w-150px w-150px">Giá</th>
                                </tr>
                                </thead>
                                <!--end::Table head-->
                                <!--begin::Table body-->
                                <tbody>
                                @if (order != null && order.OrderItems != null)
                                {
                                    foreach (var orderDetail in order.OrderItems)
                                    {
                                        string s = "";
                                        foreach (var i in orderDetail.Toppings) s += i.Name + "; ";
                                        string name = orderDetail.NameProduct + " (+ " + orderDetail.PriceSize + ") + " + s;
                                        <tr class="border-bottom border-bottom-dashed" data-kt-element="item">
                                            <td class="pe-7">
                                                <input type="text" class="form-control form-control-solid mb-2" name="name[]" placeholder="@name ">
                                            </td>
                                            <td class="ps-0">
                                                <input class="form-control form-control-solid" name="quantity[]" value="@(orderDetail.Quantity)" data-kt-element="quantity">
                                            </td>
                                            <td>
                                                <input type="text" class="form-control form-control-solid text-end" name="price[]" placeholder="0.00" value="@($"{orderDetail.SubAmount:0,0 VND}")" data-kt-element="price">
                                            </td>
                                        </tr>
                                    }
                                }

                                </tbody>
                                <!--end::Table body-->
                                <!--begin::Table foot-->
                                <tfoot>

                                <tr class="align-top fw-bolder text-gray-700">
                                    <th></th>
                                    <th colspan="2" class="fs-4 ps-0">Total</th>
                                    <th colspan="2" class="text-end fs-4 text-nowrap">
                                        <span data-kt-element="grand-total">@($"{order.TotalAmount:0,0 VND}") </span>
                                    </th>
                                </tr>
                                </tfoot>
                                <!--end::Table foot-->
                            </table>
                        </div>
                        @if (codeF != null)
                        {
                            <EditForm Model="@codeF">
                                <div class="mb-5">
                                    <InputText @bind-Value="codeF" type="text" class="form-control form-control-solid" placeholder="Mã giảm giá (nếu có)"></InputText>
                                </div>
                            </EditForm>
                            <button class="btn-success" onclick="@(() => PickCode())">Nạp mã giảm giá</button>
                        }
                        <div class="mb-5">
                            <div class="mb-0">
                                <label class="form-label fs-6 fw-bolder text-gray-700">Khuyến mãi</label>
                                <input name="notes" class="form-control form-control-solid" rows="3" placeholder="@reduce"/>
                            </div>
                        </div>
                        <EditForm Model="@order">
                            <div class="mb-0">
                                <label class="form-label fs-6 fw-bolder text-gray-700">Ghi chú</label>
                                <InputTextArea @bind-Value="order.Description" name="notes" class="form-control form-control-solid" rows="3" placeholder="Thanks for your business"></InputTextArea>
                            </div>
                        </EditForm>
                        <!--end::Notes-->
                    </div>
                    <!--end::Wrapper-->
                </form>
                <!--end::Form-->
            </div>
            <!--end::Card body-->
        </div>
        <!--end::Card-->
        <!--begin::Card-->
    }
</div>
<!--end::Content-->
<!--begin::Sidebar-->
<div class="flex-lg-auto min-w-lg-300px">
    <!--begin::Card-->
    <div class="card" data-kt-sticky="true" data-kt-sticky-name="invoice" data-kt-sticky-offset="{default: false, lg: '200px'}" data-kt-sticky-width="{lg: '250px', lg: '300px'}" data-kt-sticky-left="auto" data-kt-sticky-top="150px" data-kt-sticky-animation="false" data-kt-sticky-zindex="95" style="">
        <!--begin::Card body-->
        <div class="card-body p-10">
            <!--begin::Separator-->
            <div class="separator separator-dashed mb-8"></div>
            <!--end::Separator-->
            <!--begin::Input group-->
            <div class="mb-8">
                <!--begin::Option-->
                <label class="form-check form-switch form-switch-sm form-check-custom form-check-solid flex-stack mb-5">
                    <span class="form-check-label ms-0 fw-bolder fs-6 text-gray-700">Đã thanh toán</span>
                    <input class="form-check-input" type="checkbox" checked="checked" value="">
                </label>
                <!--end::Option-->
            </div>
            <!--end::Input group-->
            <!--begin::Separator-->
            <div class="separator separator-dashed mb-8"></div>
            <!--end::Separator-->
            <!--begin::Actions-->
            <div class="mb-0">
                <button type="submit" onclick="@(() => OnSubmit())" href="#" class="btn btn-primary w-100" id="kt_invoice_submit_button">
                    <!--begin::Svg Icon | path: icons/duotune/general/gen016.svg-->
                    <span class="svg-icon svg-icon-3">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <path d="M15.43 8.56949L10.744 15.1395C10.6422 15.282 10.5804 15.4492 10.5651 15.6236C10.5498 15.7981 10.5815 15.9734 10.657 16.1315L13.194 21.4425C13.2737 21.6097 13.3991 21.751 13.5557 21.8499C13.7123 21.9488 13.8938 22.0014 14.079 22.0015H14.117C14.3087 21.9941 14.4941 21.9307 14.6502 21.8191C14.8062 21.7075 14.9261 21.5526 14.995 21.3735L21.933 3.33649C22.0011 3.15918 22.0164 2.96594 21.977 2.78013C21.9376 2.59432 21.8452 2.4239 21.711 2.28949L15.43 8.56949Z" fill="currentColor"></path>
                            <path opacity="0.3" d="M20.664 2.06648L2.62602 9.00148C2.44768 9.07085 2.29348 9.19082 2.1824 9.34663C2.07131 9.50244 2.00818 9.68731 2.00074 9.87853C1.99331 10.0697 2.04189 10.259 2.14054 10.4229C2.23919 10.5869 2.38359 10.7185 2.55601 10.8015L7.86601 13.3365C8.02383 13.4126 8.19925 13.4448 8.37382 13.4297C8.54839 13.4145 8.71565 13.3526 8.85801 13.2505L15.43 8.56548L21.711 2.28448C21.5762 2.15096 21.4055 2.05932 21.2198 2.02064C21.034 1.98196 20.8409 1.99788 20.664 2.06648Z" fill="currentColor"></path>
                        </svg>
                    </span>
                    <!--end::Svg Icon-->Gửi
                </button>
            </div>
            <!--end::Actions-->
        </div>
        <!--end::Card body-->
    </div>
    <!--end::Card-->
</div>
<!--end::Sidebar-->
</div>
<!--end::Layout-->
</div>
</div>
</div>


@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }

    [CascadingParameter]
    public IModalService Modal { get; set; }

    [Parameter]
    public string BranchId { get; set; }

    private Models.Pagination.Pagination pagination = new();
    public String Cashier { get; set; }
    private OrderRequest order;
    private string Id;
    private string phone = "";
    private string codeF = "";
    private double reduce = 0;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationState;
            if (authState.User.Identity.IsAuthenticated)
            {
                Cashier = authState.User.FindFirst(x => x.Type == ClaimTypes.GivenName)!.Value;
                BranchId = authState.User.FindFirst(x => x.Type == ClaimValue.BranhID)!.Value;
            }
            order = GbParameter.GbParameter.Order;
            if (order == null)
            {
                order = new OrderRequest();
                order.OrderItems = new List<OrderItem>();
                GbParameter.GbParameter.Order = order;
            }
            order.TotalAmount = 0;
            order.Cashier = Cashier;
            order.BranchID = BranchId;
            foreach (var or in order.OrderItems)
            {
                order.TotalAmount += or.SubAmount;
            }
            order.CustomerPut = order.TotalAmount;
        }
        catch (Exception e)
        {
            toastService.ShowError("có lỗi");
        }
    }

    public async Task ShowPopUp()
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(InvoicePopup.Id), Id);

        var modal = Modal.Show<InvoicePopup>("Hóa đơn", parameters, options: new ModalOptions
        {
            UseCustomLayout = true
        });
        var result = await modal.Result;
    }

    public async Task PickCode()
    {
        reduce = await promotionService.GetReduceMoney(codeF, order.OrderItems);
        order.ReducePromotion = reduce;
        order.TotalAmount -= reduce;
        StateHasChanged();
    }

    public async Task OnSubmit()
    {
        if (!string.IsNullOrEmpty(phone))
        {
            var res = await customerService.GetAllCustomerByPhone(phone);
            if (res != null && res.Result == 1)
            {
                Customer cus = res.Data;
                order.CustomerID = cus.ID;
            }
        }

        if (order.CustomerPut < order.TotalAmount)
        {
            toastService.ShowError("tiền bị thiếu");
            return;
        }
        order.CustomerReceive = order.CustomerPut - order.TotalAmount;
        var response = await orderService.AddOrder(order);
        if (response != null)
        {
            if (response.Result == 1)
            {
                toastService.ShowSuccess("thành công");
                Id = response.Data.ID;
                GbParameter.GbParameter.Order = null;
                await ShowPopUp();
                navigationManager.NavigateTo("/dashboard");
            }
            else
            {
                toastService.ShowSuccess(response.Message);
            }
        }
        else
        {
            toastService.ShowError("thất bại");
        }
    }

}