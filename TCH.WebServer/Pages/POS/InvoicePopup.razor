@using TCH.WebServer.Services.Orders
@inject IToastService toastService;
@inject IOrderService orderService;
@attribute [Authorize]

@if (myMarkup != null)
{
   @((MarkupString)myMarkup)
}
<div class="d-flex justify-content-end">
    <!--begin::Button-->
    <a href="/invoice" id="kt_ecommerce_add_product_cancel" class="btn btn-light me-5">Cancel</a>
    <!--end::Button-->
    <!--begin::Button-->
    <button type="submit" id="kt_ecommerce_add_category_submit" class="btn btn-primary" >
        <span class="indicator-label">Hoàn thành</span>
        <span class="indicator-progress">
            Please wait...
            <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
        </span>
    </button>
    <!--end::Button-->
</div>

@code {
    [Parameter] public string Id { get; set; }
    public string myMarkup { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        myMarkup = await orderService.PrintPDF(Id);
    }
}