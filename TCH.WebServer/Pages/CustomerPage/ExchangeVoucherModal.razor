@using TCH.Utilities.SubModels
@using TCH.WebServer.Services.Customers
@using TCH.WebServer.Services.Promotions
@inject IPromotionService PromotionService
@inject IToastService ToastService
@inject ICustomerService CustomerService
@attribute [Authorize]

<div class="modal fade show d-block" tabindex="-1" role="dialog">
    <div class="modal-backdrop fade show" @onclick="OnCancel"></div>
    <div class="modal-dialog modal-dialog-centered mw-650px" style="z-index: 1050">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="fw-bolder">@Title</h5>
                <div class="btn btn-icon btn-sm btn-active-icon-primary" @onclick="OnCancel">
                    <span class="svg-icon svg-icon-1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="black"/>
                            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="black"/>
                        </svg>
                    </span>
                </div>
            </div>
            <div class="modal-body">
                <div class="scroll-y me-n7 pe-7">
                    <EditForm Model="PromotionId" OnValidSubmit="OnSubmit" class="form">
                        <DataAnnotationsValidator/>
                        <div class="fv-row mb-7">
                            <label class="required fs-6 fw-bold mb-2" for="validationCustom01">
                                Chọn voucher muốn đổi
                                <span class="text-danger">*</span>
                            </label>
                            <InputSelect type="text" class="form-control form-control-solid col-sm-6"
                                         id="validationCustom01"
                                         @bind-Value="PromotionId">
                                @if (Promotions != null)
                                {
                                    @foreach (var promotion in Promotions)
                                    {
                                        <option value="@promotion.ID">
                                            @promotion.Code - @promotion.Name
                                        </option>
                                    }
                                }
                               
                            </InputSelect>
                        </div>
                        <div class="card-footer p-2">
                            <button type="submit" class="btn btn-primary mr-2" onclick="@(() => OnSubmit())">Quy đổi</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string CustomerId { get; set; }

    private List<Promotion> Promotions { get; set; }
    private string PromotionId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        PromotionId = "";
        Promotions = new();
        var response = await PromotionService.GetAllPromotions(IsPaging:false, 1, 10);
        if (response.Result == 1)
        {
            Promotions = response.Data.Items;
        }
    }
}


@code {

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; }

    private async Task OnCancel() => await BlazoredModal.CancelAsync();

    private async Task OnSubmit()
    {
        try
        {
            var response = await CustomerService.ExchangePoint(CustomerId, PromotionId);
            if (response.Result == 1)
            {
                ToastService.ShowSuccess("Thêm thành công");
                await BlazoredModal.CloseAsync(ModalResult.Ok(true));
            }
            else
            {
                ToastService.ShowError(response.Message);
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.ToString());
        }
    }

}