@page "/categories"

@inject NavigationManager navigationManager
@inject ICategoryService categoryService
@inject IUserService userService
@inject IToastService toastService
@inject IConfiguration Configuration
@attribute [Authorize]

<div class="page d-flex flex-row flex-column-fluid">
    <div class="wrapper d-flex flex-column flex-row-fluid" id="kt_wrapper">

        <div class="content d-flex flex-column flex-column-fluid" id="kt_content">
            <div class="card card-flush " style="margin-top:45px">
                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                    <div class="card-title">
                        <div class="d-flex align-items-center position-relative my-1">
                            <span class="svg-icon svg-icon-1 position-absolute ms-4">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                    <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black"></rect>
                                    <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="black"></path>
                                </svg>
                            </span>
                            <input type="text" data-kt-ecommerce-category-filter="search" class="form-control form-control-solid w-250px ps-14" placeholder="Tìm kiếm loại sản phẩm">
                        </div>
                    </div>
                    <div class="card-toolbar">

                        <a class="btn btn-primary" onclick="@(() => Add())">Thêm Loại sản phẩm</a>
                    </div>
                </div>
                <div class="card-body pt-0">

                    <div id="kt_ecommerce_category_table_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
                        <div class="table-responsive">
                            <table class="table align-middle table-row-dashed fs-6 gy-5 dataTable no-footer" id="kt_ecommerce_category_table">
                                <thead>
                                <tr class="text-start text-gray-400 fw-bolder fs-7 text-uppercase gs-0">
                                    <th class="w-10px pe-2 sorting_disabled" rowspan="1" colspan="1" aria-label="" style="width: 29.25px;">
                                        <div class="form-check form-check-sm form-check-custom form-check-solid me-3">
                                            <input class="form-check-input" type="checkbox" data-kt-check="true" data-kt-check-target="#kt_ecommerce_category_table .form-check-input" value="1">
                                        </div>
                                    </th>
                                    <th class="min-w-250px sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" style="width: 637.234px;">
                                        Sản phẩm
                                    </th>
                                    <th class="min-w-150px sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" style="width: 159.297px;">
                                        loại sản phẩm
                                    </th>
                                    <th class="text-end min-w-70px sorting_disabled" rowspan="1" colspan="1" aria-label="Actions" style="width: 103.969px;">
                                        Thao tác
                                    </th>
                                </tr>
                                </thead>
                                <tbody class="fw-bold text-gray-600">
                                @if (CategoryList.Count != 0)
                                {
                                    foreach (var product in CategoryList)
                                    {
                                        <tr class="odd">
                                            <td>
                                                <div class="form-check form-check-sm form-check-custom form-check-solid">
                                                    <input class="form-check-input" type="checkbox" value="1">
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="ms-5">
                                                        <a class="text-gray-800 text-hover-primary fs-5 fw-bolder mb-1" data-kt-ecommerce-category-filter="category_name">
                                                            @product.Name
                                                        </a>
                                                        <div class="text-muted fs-7 fw-bolder">@product.Description</div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                @*if(product.Category.Name != null){
                                                        <div class="badge badge-light-success">@product.Category.Name</div>
                                                        }*@
                                            </td>
                                            <td class="text-end">
                                                <div class="dropdown">
                                                    <button class="btn btn-light dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                                        Thao tác
                                                    </button>
                                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                                                        <li>
                                                            <a class="dropdown-item" onclick="@(() => Update(product.ID.ToString()))">Sửa</a>
                                                        </li>
                                                        <li>
                                                            <a class="dropdown-item" onclick="@(() => Delete(product.ID.ToString()))">Xóa</a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr class="odd">
                                        <td colspan="4">
                                            <div class="d-flex justify-content-center align-items-center">
                                                <svg class="pl" viewBox="0 0 128 128" width="128px" height="128px" xmlns="http://www.w3.org/2000/svg">
                                                    <defs>
                                                        <linearGradient id="pl-grad" x1="0" y1="0" x2="0" y2="1">
                                                            <stop offset="0%" stop-color="hsl(193,90%,55%)"/>
                                                            <stop offset="100%" stop-color="hsl(223,90%,55%)"/>
                                                        </linearGradient>
                                                    </defs>
                                                    <circle class="pl__ring" r="56" cx="64" cy="64" fill="none" stroke="hsla(0,10%,10%,0.1)" stroke-width="16" stroke-linecap="round"/>
                                                    <path class="pl__worm" d="M92,15.492S78.194,4.967,66.743,16.887c-17.231,17.938-28.26,96.974-28.26,96.974L119.85,59.892l-99-31.588,57.528,89.832L97.8,19.349,13.636,88.51l89.012,16.015S81.908,38.332,66.1,22.337C50.114,6.156,36,15.492,36,15.492a56,56,0,1,0,56,0Z" fill="none" stroke="url(#pl-grad)" stroke-width="16" stroke-linecap="round" stroke-linejoin="round" stroke-dasharray="44 1111" stroke-dashoffset="10"/>
                                                </svg>
                                            </div>

                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-1 d-flex align-items-center justify-content-center justify-content-md-start">
                                <div class="dataTables_length" id="kt_ecommerce_category_table_length">
                                    <label>
                                        <EditForm Model="pagination">
                                            <InputSelect @bind-Value="pagination.pageSize" name="kt_ecommerce_category_table_length" aria-controls="kt_ecommerce_category_table" class="form-select form-select-sm form-select-solid">
                                                <option value="10">10</option>
                                                <option value="25">25</option>
                                                <option value="50">50</option>
                                                <option value="100">100</option>
                                            </InputSelect>
                                        </EditForm>
                                    </label>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-11 d-flex align-items-center justify-content-md-end">
                                <div class="dataTables_paginate paging_simple_numbers w-100" id="kt_ecommerce_category_table_paginate">
                                    <Pagination Count="@(pagination.totalPage)" SelectedChanged="Change"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public List<Category>? CategoryList = new();
    private Models.Pagination.Pagination pagination = new();

    [CascadingParameter]
    public IModalService Modal { get; set; }


    protected override async Task OnInitializedAsync()
    {
        CategoryList = new();
        await Get(1);
    }

    public async Task Get(int pageNumber)
    {
        try
        {
            var response = await categoryService.GetCategories(true, pagination.pageSize, pageNumber);
            pagination.PageNumber = response.Data.CurrentPage;
            CategoryList = response.Data.Items.ToList();
            pagination.totalPage = response.Data.TotalPages;
            StateHasChanged();
        }
        catch (Exception e)
        {
            toastService.ShowError("có lỗi");
        }
    }

    public async Task Add()
    {
        var moviesModal = Modal.Show<AddCategory>("Thêm loại sản phẩm", options: new ModalOptions()
        {
            UseCustomLayout = true,
        });
        var result = await moviesModal.Result;

        if (result.Cancelled)
            Console.WriteLine("Modal was cancelled");
        else

            await Get(1);
    }

    public async void Update(string id)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(AddCategory.CategoryId), id);
        var moviesModal = Modal.Show<AddCategory>("Sửa loại sản phẩm", parameters, options: new ModalOptions()
        {
            UseCustomLayout = true,
        });
        var result = await moviesModal.Result;

        if (result.Cancelled)
            Console.WriteLine("Modal was cancelled");
        else
            await Get(1);
    }

    public async Task Delete(string id)
    {
        var result = await categoryService.DeleteCategory(id);
        if (result.Result == 1)
        {
            toastService.ShowSuccess(result.Message);
            await Get(1);
        }
        else
        {
            toastService.ShowError("có lỗi");
        }
    }

    public async void Change(int link)
    {
        pagination.PageNumber = link;
        await Get(link);
        StateHasChanged();
    }

}