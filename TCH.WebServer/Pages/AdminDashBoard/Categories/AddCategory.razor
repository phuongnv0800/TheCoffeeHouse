@inject ICategoryService CategoryService
@inject IToastService ToastService
@attribute [Authorize]

<div class="modal fade show d-block" tabindex="-1" role="dialog">
    <div class="modal-backdrop fade show" @onclick="OnCancel"></div>
    <div class="modal-dialog modal-dialog-centered mw-650px" style="z-index: 1050">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="fw-bolder">@Title</h5>
                <div class="btn btn-icon btn-sm btn-active-icon-primary" @onclick="OnCancel">
                    <span class="svg-icon svg-icon-1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="black"/>
                            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="black"/>
                        </svg>
                    </span>
                </div>
            </div>
            <div class="modal-body">
                <div class="scroll-y me-n7 pe-7">
                    <EditForm Model="_editProduct" OnValidSubmit="OnSubmit" class="form">
                        <DataAnnotationsValidator/>
                        <div class="fv-row mb-7">
                            <label class="required fs-6 fw-bold mb-2">Tên sản phẩm</label>
                            <InputText @bind-Value="_editProduct.Name" class="form-control form-control-solid col-sm-6"/>
                            <div class="fv-plugins-message-container invalid-feedback">
                                <ValidationMessage For="@(() => _editProduct.Name)"/>
                            </div>
                        </div>


                        <div class="fv-row mb-7">
                            <label class="fs-6 fw-bold mb-2 requied">Mô tả</label>
                            <InputText @bind-Value="_editProduct.Description" class="form-control form-control-solid col-sm-6"/>
                            <div class="fv-plugins-message-container invalid-feedback">
                                <ValidationMessage For="@(() => _editProduct.Description)"/>
                            </div>
                        </div>

                        <div class="card-footer p-2">
                            <button type="submit" class="btn btn-primary mr-2" onclick="@(() => OnSubmit())">Cập nhật</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string? CategoryId { get; set; }

    private CategoryVm _editProduct = null;

    protected override async Task OnInitializedAsync()
    {
        _editProduct = new();
        if (!string.IsNullOrEmpty(CategoryId))
        {
            var res = await CategoryService.GetCategoryById(CategoryId);
            _editProduct = new CategoryVm();
            _editProduct.ID = res.Data.ID;
            _editProduct.Name = res.Data.Name;
            _editProduct.Description = res.Data.Description;
        }
    }

}


@code {

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; }

    private async Task OnCancel() => await BlazoredModal.CancelAsync();

    private async Task OnSubmit()
    {
        try
        {
            if (string.IsNullOrEmpty(CategoryId))
            {
                var messageResult = await CategoryService.AddCategory(_editProduct);
                if (messageResult.Result == 1)
                {
                    ToastService.ShowSuccess("Thêm thành công");
                    await BlazoredModal.CloseAsync(ModalResult.Ok(true));
                }
                else
                {
                    ToastService.ShowError(messageResult.Message);
                    await BlazoredModal.CloseAsync(ModalResult.Ok(false));
                }
            }
            else
            {
                var response = await CategoryService.UpdateCategory(CategoryId, _editProduct);
                if (response.Result == 1)
                {
                    ToastService.ShowSuccess("Thêm thành công");
                    await BlazoredModal.CloseAsync(ModalResult.Ok(true));
                }
                else
                {
                    ToastService.ShowError(response.Message);
                    await BlazoredModal.CloseAsync(ModalResult.Ok(false));
                }
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.ToString());
        }
    }

}