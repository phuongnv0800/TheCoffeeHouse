@page "/orders"
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json
@using System.Net.Http.Headers

@using System.Security.Claims
@using TCH.Data.Entities
@using TCH.WebServer.Models
@using TCH.WebServer.Models.Pagination
@using TCH.WebServer.Services.Orders
@using TCH.WebServer.Services.Reports
@using TCH.WebServer.Services.Users

@inject HttpClient httpClient
@inject ILocalStorageService localStorage;
@inject IOrderService orderService;
@inject IUserService userServices;
@inject NavigationManager navigationManager;
@inject IToastService toastService
@inject IJSRuntime jsRuntime;
@attribute [Authorize]

<div class="page d-flex flex-row flex-column-fluid">
    <div class="wrapper d-flex flex-column flex-row-fluid" id="kt_wrapper">
        <TCH.WebServer.Shared.Header.Header></TCH.WebServer.Shared.Header.Header>
        <div class="content d-flex flex-column flex-column-fluid" id="kt_content">
            <div class="card card-flush " style="margin-top:65px">
                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                    <div class="card-title">
                        <div class="d-flex align-items-center position-relative my-1">
                            <span class="svg-icon svg-icon-1 position-absolute ms-4">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                    <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black"></rect>
                                    <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="black"></path>
                                </svg>
                            </span>
                            @if (dateRequest != null)
                            {
                                <EditForm Model="dateRequest" OnValidSubmit="SearchByText" class="d-flex">
                                    <InputDate @bind-Value="dateRequest.FromDate" class="form-control form-control-solid w-250px ps-14" placeholder="Ngày đầu" />
                                    <InputDate @bind-Value="dateRequest.ToDate" class="form-control ms-2 form-control-solid w-250px ps-14" placeholder="Ngày cuốith" />
                                    <button onclick = "@(() => SearchByText())"
                                    class="btn btn-primary  ms-2" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                        Tìm kiếm
                                    </button>
                                </EditForm>
                            }
                        </div>
                    </div>
                </div>
                <div class="card-body pt-0">

                    <div id="kt_ecommerce_category_table_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
                        <div class="table-responsive">
                            <table class="table align-middle table-row-dashed fs-6 gy-5 dataTable no-footer" id="kt_ecommerce_category_table">
                                <thead>
                                    <tr class="text-start text-gray-400 fw-bolder fs-7 text-uppercase gs-0">
                                        <th class="w-10px pe-2 sorting_disabled" rowspan="1" colspan="1" aria-label="" style="width: 29.25px;">
                                            <div class="form-check form-check-sm form-check-custom form-check-solid me-3">
                                                <input class="form-check-input" type="checkbox" data-kt-check="true" data-kt-check-target="#kt_ecommerce_category_table .form-check-input" value="1">
                                            </div>
                                        </th>
                                        <th class="min-w-250px sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" aria-label="Category: activate to sort column ascending" style="width: 637.234px;">
                                            Tên phiếu nhập
                                        </th>
                                        <th class="text-end min-w-70px sorting_disabled" rowspan="1" colspan="1" aria-label="Actions" style="width: 103.969px;">
                                            Thao tác
                                        </th>
                                    </tr>
                                </thead>
                                <tbody class="fw-bold text-gray-600">
                                    @if (ProductsList.Count != 0)
                                    {
                                        foreach (var product in ProductsList)
                                        {
                                            string href = "/orders/" + product.ID.ToString();
                                            <tr class="odd">
                                                <td>
                                                    <div class="form-check form-check-sm form-check-custom form-check-solid">
                                                        <input class="form-check-input" type="checkbox" value="1">
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <div class="ms-5">
                                                            <a href="@href" class="text-gray-800 text-hover-primary fs-5 fw-bolder mb-1" data-kt-ecommerce-category-filter="category_name">
                                                                @product.Code
                                                            </a>
                                                            <div class="text-muted fs-7 fw-bolder">@product.BranchID</div>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    @*if(product.Category.Name != null){
                                                        <div class="badge badge-light-success">@product.Category.Name</div>
                                                        }*@
                                                </td>
                                                <td class="text-end">
                                                    <div class="dropdown">
                                                        <button class="btn btn-light dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                                            Thao tác
                                                        </button>
                                                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                                                            <li><a class="dropdown-item" onclick="@(() => Delete(@product.ID.ToString()))">Xóa</a></li>
                                                        </ul>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    @*else
                                        {
                                        <div class="spinner" ></div>
                                        }*@

                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start">
                                <div class="dataTables_length" id="kt_ecommerce_category_table_length">
                                    <label>
                                        <EditForm Model="pagination">
                                            <InputSelect @bind-Value="pagination.pageSize" name="kt_ecommerce_category_table_length" aria-controls="kt_ecommerce_category_table" class="form-select form-select-sm form-select-solid">
                                                <option value="10">10</option>
                                                <option value="25">25</option>
                                                <option value="50">50</option>
                                                <option value="100">100</option>
                                            </InputSelect>
                                        </EditForm>
                                    </label>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-7 d-flex align-items-center justify-content-center justify-content-md-end">
                                <div class="dataTables_paginate paging_simple_numbers" id="kt_ecommerce_category_table_paginate">
                                    <ul class="pagination">
                                        <li class="paginate_button page-item previous disabled" id="kt_ecommerce_category_table_previous">
                                            <a href="#" aria-controls="kt_ecommerce_category_table" data-dt-idx="0" tabindex="0" class="page-link">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox='0 0 8 9' fill='#23B5B5C3' fill-rule='evenodd' clip-rule='evenodd'>
                                                    <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black"></rect>
                                                    <path d="M2.06463 4.42111C1.96161 4.22088 1.9809 3.9637 2.12863 3.78597L5.12847 0.177181C5.31402 -0.046034 5.63049 -0.060261 5.83532 0.145404C6.04015 0.351069 6.05578 0.698744 5.87023 0.921959L3.19406 4.14137L5.84414 7.06417C6.03896 7.27904 6.03835 7.62686 5.84278 7.84105C5.64721 8.05524 5.33073 8.05469 5.13591 7.83982L2.14806 4.54449C2.1141 4.50704 2.08629 4.46541 2.06463 4.42111Z"></path>
                                                </svg>
                                            </a>
                                        </li>
                                        @*<li class="paginate_button page-item active">
                                            <a href="#" aria-controls="kt_ecommerce_category_table" data-dt-idx="1" tabindex="0" class="page-link">1</a>
                                            </li>
                                            <li class="paginate_button page-item "><a href="#" aria-controls="kt_ecommerce_category_table" data-dt-idx="2" tabindex="0" class="page-link">2</a></li>*@
                                        @for (int link = 1; link <= pagination.totalPage; link++)
                                        {
                                            var btnNumber = link;
                                            <li class="@((pagination.PageNumber == link) ? "paginate_button page-item active" : "paginate_button page-item")">
                                                <a aria-controls="kt_ecommerce_category_table" data-dt-idx="1" tabindex="0" class="page-link" onclick="@(() => Change(btnNumber))">@btnNumber</a>
                                            </li>
                                        }
                                        <li class="paginate_button page-item next" id="kt_ecommerce_category_table_next">
                                            <a href="#" aria-controls="kt_ecommerce_category_table" data-dt-idx="3" tabindex="0" class="page-link">
                                                <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 9' fill='%235E6278'><path fill-rule='evenodd' clip-rule='evenodd' d='M5.93537 4.57889C6.03839 4.77912 6.0191 5.0363 5.87137 5.21403L2.87153 8.82282C2.68598 9.04603 2.36951 9.06026 2.16468 8.8546C1.95985 8.64893 1.94422 8.30126 2.12977 8.07804L4.80594 4.85863L2.15586 1.93583C1.96104 1.72096 1.96165 1.37314 2.15722 1.15895C2.35279 0.944757 2.66927 0.945311 2.86409 1.16018L5.85194 4.45551C5.8859 4.49296 5.91371 4.53459 5.93537 4.57889Z' /></svg>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    public List<Order>? ProductsList = new List<Order>();
    private string? token;
    public string Name;
    private TCH.WebServer.Models.Pagination.Pagination pagination = new TCH.WebServer.Models.Pagination.Pagination();
    private ApplicationUser User;
    private DateRequest dateRequest;

    [CascadingParameter] public IModalService Modal { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        try{
            dateRequest = new DateRequest();
            navigationManager.NavigateTo("orders");
            var response = await userServices.GetUserInfo();
            User = response.Data;
            await Get(1);
            base.OnParametersSet();
        }
        catch(Exception ex){
            toastService.ShowError("có lỗi");
        }
    }
    public async Task Get(int pageNumber)
    {
        try{
            var response = await orderService.GetAllOrders(true, pagination.pageSize, pageNumber, dateRequest.FromDate, dateRequest.ToDate);
            pagination.PageNumber = response.Data.CurrentPage;
            ProductsList = response.Data.Items.ToList();
            pagination.totalPage = response.Data.TotalPages;
        }
        catch(Exception ex){
            toastService.ShowError("có lỗi");
        }
    }
    public async void Delete(string id)
    {
        await orderService.DeleteOrder(id);
    }
    public async void Change(int link)
    {
        pagination.PageNumber = link;
        await Get(link);
        StateHasChanged();
    }
    public async Task SearchByText()
    {
        await Get(pagination.PageNumber);
    }
}

@code {
    public class DateRequest
    {
        public DateTime? FromDate { get; set; }
        public DateTime? ToDate { get; set; }
    }
}

