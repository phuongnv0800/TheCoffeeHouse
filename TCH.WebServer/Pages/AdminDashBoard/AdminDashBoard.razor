@page "/admin-dashboard"
@inject IConfiguration Configuration
@inject IOrderService OrderService;
@inject IToastService ToastService
@inject IJSRuntime JsRuntime;
@inject IBrandService BranchService
@inject IUserApiClient UserApiClient;
@inject IUserService UserServices
@attribute [Authorize]

<div class="page d-flex flex-row flex-column-fluid">
    <div class="wrapper d-flex flex-column flex-row-fluid mt-5" id="kt_wrapper">

        <div class="content flex-column flex-column-fluid" id="kt_content">
            <div class="card card-flush " style="">
                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                    <div class="card-title">
                        <div class="d-flex align-items-center position-relative my-1">
                            <span class="svg-icon svg-icon-1 position-absolute ms-4">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                    <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black"></rect>
                                    <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="black"></path>
                                </svg>
                            </span>
                            <div class="card-title">
                                <div class="d-flex align-items-center position-relative my-1">
                                    <span class="svg-icon svg-icon-1 position-absolute ms-4">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                            <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black"></rect>
                                            <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="black"></path>
                                        </svg>
                                    </span>
                                    @if (dateRequest != null)
                                    {
                                        <EditForm Model="@dateRequest" OnValidSubmit="SearchByText" class="d-flex">
                                            <InputDate @bind-Value="dateRequest.FromDate" class="form-control form-control-solid w-250px ps-14" placeholder="Ngày đầu"/>
                                            <InputDate @bind-Value="dateRequest.ToDate" class="form-control ms-2 form-control-solid w-250px ps-14" placeholder="Ngày cuốith"/>
                                            <button onclick="@SearchByText"
                                                    class="btn btn-primary  ms-2" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                                Tìm kiếm
                                            </button>
                                        </EditForm>
                                    }
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
                <div class="card-body pt-0">

                    <RadzenChart>
                        <RadzenLineSeries Smooth="@smooth" Data="@MoneyByDayAll.MoneyByDayDetails" CategoryProperty="DateTime" Title="Tổng doanh thu" ValueProperty="Revenue">
                            <RadzenMarkers MarkerType="MarkerType.Square"/>
                        </RadzenLineSeries>
                        @if (MoneyByDayInBranch != null && MoneyByDayInBranch.Count != 0)
                        {
                            @foreach (var item in MoneyByDayInBranch)
                            {
                                <RadzenLineSeries Smooth="@smooth" Data="@item.MoneyByDayDetails" CategoryProperty="DateTime" Title="@item.Branch.Name" ValueProperty="Revenue">
                                    <RadzenMarkers MarkerType="MarkerType.Square"/>
                                </RadzenLineSeries>
                            }
                        }

                        <RadzenCategoryAxis Padding="20" FormatString="{0:dd/MM/yyyy}"/>
                        <RadzenValueAxis>
                            @*<RadzenGridLines Visible="true" />*@
                            <RadzenAxisTitle Text="Tổng doanh thu"/>
                        </RadzenValueAxis>
                    </RadzenChart>


                    <div class="text-end d-flex mt-5">
                        <h1>Tổng doanh thu: </h1>
                        <h1 class="text-primary ms-2">@String.Format("{0:0,0 vnđ}", MoneyByDayAll.TotalAmount)</h1>
                        <button class="btn btn-success ms-5" onclick="@(() => ExportExcel())">Xuất Excel</button>

                    </div>
                </div>
            </div>
            <div class="card card-flush ">
                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                    <div class="card-title">
                        <div class="d-flex align-items-center position-relative my-1">
                            <span class="svg-icon svg-icon-1 position-absolute ms-4">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                    <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black"></rect>
                                    <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="black"></path>
                                </svg>
                            </span>
                            <EditForm Model="searchText" OnValidSubmit="SearchByText">
                                <InputText @bind-Value="searchText" type="text" data-kt-ecommerce-category-filter="search" class="form-control form-control-solid w-450px ps-14" placeholder="Tìm kiếm chinh nhánh theo tên"/>
                            </EditForm>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-0">

                    <div id="kt_ecommerce_category_table_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
                        <div class="table-responsive">
                            <table class="table align-middle table-row-dashed fs-6 gy-5 dataTable no-footer" id="kt_ecommerce_category_table">
                                <thead>
                                <tr class="text-start text-gray-400 fw-bolder fs-7 text-uppercase gs-0">
                                    <th class="w-10px pe-2 sorting_disabled" rowspan="1" colspan="1" aria-label="" style="width: 29.25px;">
                                        <div class="form-check form-check-sm form-check-custom form-check-solid me-3">
                                            <input class="form-check-input" type="checkbox" data-kt-check="true" data-kt-check-target="#kt_ecommerce_category_table .form-check-input" value="1">
                                        </div>
                                    </th>
                                    <th class="min-w-250px sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" aria-label="Category: activate to sort column ascending" style="width: 637.234px;">
                                        Cửa hàng
                                    </th>
                                    <th class="min-w-150px sorting" tabindex="0" aria-controls="kt_ecommerce_category_table" rowspan="1" colspan="1" aria-label="Category Type: activate to sort column ascending" style="width: 159.297px;">
                                        Thành phố
                                    </th>
                                    <th class="min-w-150px  sorting_disabled" rowspan="1" colspan="1" aria-label="Actions" style="width: 103.969px;">
                                        Số điện thoại
                                    </th>
                                    <th class="min-w-150px  sorting_disabled" rowspan="1" colspan="1" aria-label="Actions" style="width: 103.969px;">
                                        Email
                                    </th>
                                </tr>
                                </thead>
                                <tbody class="fw-bold text-gray-600">
                                @if (BranchList?.Count != 0 && BranchList != null)
                                {
                                    foreach (var branch in BranchList)
                                    {
                                        string fileImage = Configuration["BackendApiUrl"] + "/Uploads/" + branch.LinkImage;
                                        string href = "/orders-branch/" + branch.ID;
                                        <tr class="odd">
                                            <td>
                                                <div class="form-check form-check-sm form-check-custom form-check-solid">
                                                    <input type="checkbox" class="form-check-input" @onchange="@(e => { SelectBranch(@branch.ID, e.Value); })">
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <img height="40" width="40" src="@fileImage">
                                                    <div class="ms-5">
                                                        <a href="@href" class="text-gray-800 text-hover-primary fs-5 fw-bolder mb-1" data-kt-ecommerce-category-filter="category_name">
                                                            @branch.Name
                                                        </a>
                                                        <div class="text-muted fs-7 fw-bolder">@branch.Adderss </div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @branch.City
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @branch.Phone
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @branch.Email
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <Spinner Colspan="5"></Spinner>
                                }
                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-2 d-flex align-items-center justify-content-center justify-content-md-start">
                                <div class="dataTables_length" id="kt_ecommerce_category_table_length">
                                    <label>
                                        <EditForm Model="pagination">
                                            <InputSelect @bind-Value="pagination.pageSize" name="kt_ecommerce_category_table_length" aria-controls="kt_ecommerce_category_table" class="form-select form-select-sm form-select-solid">
                                                <option value="10">10</option>
                                                <option value="25">25</option>
                                                <option value="50">50</option>
                                                <option value="100">100</option>
                                            </InputSelect>
                                        </EditForm>
                                    </label>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-10 d-flex align-items-center justify-content-center justify-content-md-end">
                                <div class="dataTables_paginate paging_simple_numbers w-100" id="kt_ecommerce_category_table_paginate">
                                    <Pagination Count="@(pagination.totalPage)" SelectedChanged="Change"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    bool smooth = true;
    public List<Branch>? BranchList = new();
    private Models.Pagination.Pagination pagination = new();
    private DateRequest dateRequest;
    private string searchText = "";

    public MoneyByDay MoneyByDayAll { get; set; } = new();

    public List<MoneyByDay> MoneyByDayInBranch { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            MoneyByDayAll = new();
            MoneyByDayInBranch = new();
            dateRequest = new DateRequest()
            {
                FromDate = new DateTime(2022, 06, 01),
                ToDate = DateTime.Now
            };
            var res = await BranchService.GetAllBranchs(searchText);
            BranchList = res.Data.Items;
            await GetChartAllBranch();
        }
        catch (Exception ex)
        {
            ToastService.ShowError("có lỗi");
        }
    }

    public async Task SearchByText()
    {
        var res = await BranchService.GetAllBranchs(searchText);
        BranchList = res.Data.Items;
        await GetChartAllBranch();
        MoneyByDayInBranch = new();
        StateHasChanged();
    }

    public async Task Change()
    {
    }

    public async Task GetChartAllBranch()
    {
        try
        {
            var resp = await OrderService.GetChartMoney(dateRequest.FromDate.Date, dateRequest.ToDate.Date);
            if (resp != null && resp.Result == 1)
            {
                MoneyByDayAll = resp.Data;
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.ToString());
        }
    }

    public async Task GetChartBranch(string branchId)
    {
        try
        {
            var resp = await OrderService.GetChartMoneyByBranchId(branchId, dateRequest.FromDate.Date, dateRequest.ToDate.Date);
            if (resp != null && resp.Result == 1)
            {
                MoneyByDayInBranch.Add(resp.Data);
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError("có lỗi");
        }
    }

    public async Task ExportExcel()
    {
        try
        {
            var fileName = $"OrderReport.xlsx";
            var bytes = await OrderService.GetExcel(dateRequest.FromDate, dateRequest.ToDate);
            await JsRuntime.InvokeAsync<object>("saveAsFile", fileName, Convert.ToBase64String(bytes));
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.ToString());
        }
    }

    public async Task SelectBranch(string branchId, object checkedValue)
    {
        if ((bool) checkedValue)
        {
            await GetChartBranch(branchId);
            StateHasChanged();
        }
        else
        {
            var selectBranch = MoneyByDayInBranch.FirstOrDefault(x => x.Branch.ID == branchId);
            if (selectBranch != null)
                MoneyByDayInBranch.Remove(selectBranch);
        }
    }

}

@code {

    public class DateRequest
    {
        public DateTime FromDate { get; set; }
        public DateTime ToDate { get; set; }
    }

}