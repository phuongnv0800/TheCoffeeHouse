@page "/login"
@page "/"
@layout EmptyLayout
@inject IAuthService authService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider
@inject IToastService ToastService


<div class="d-flex flex-column flex-column-fluid bgi-position-y-bottom position-x-center bgi-no-repeat bgi-size-contain bgi-attachment-fixed" style="background-image: url('/background.jpg'); background-size:contain;background-attachment: fixed;background-size: cover;height:100vh;">
    <div class="w-lg-500px bg-body rounded shadow-sm p-10 p-lg-15 mx-auto my-auto">
        <EditForm class="form w-100 " Model="@loginModel" id="kt_sign_in_form" OnSubmit="HandleLogin">
            <DataAnnotationsValidator/>
            <div class="text-center mb-10">
                <h1 class="text-dark mb-3">Đăng nhập vào The Coffee House</h1>
            </div>
            <div class="fv-row mb-10 fv-plugins-icon-container">
                <label class="form-label fs-6 fw-bolder text-dark">Tài khoản</label>
                <InputText class="form-control form-control-lg form-control-solid" type="text" name="username" id="username" @bind-Value="@loginModel.UserName" autocomplete="off"></InputText>
                <div class="fv-plugins-message-container invalid-feedback">
                    <ValidationMessage For="@(() => loginModel.UserName)"/>
                </div>
            </div>
            <div class="fv-row mb-10 fv-plugins-icon-container">
                <div class="d-flex flex-stack mb-2">
                    <label class="form-label fw-bolder text-dark fs-6 mb-0">Mật khẩu</label>
                </div>
                <InputText class="form-control form-control-lg form-control-solid" type="password" name="password" id="password" @bind-Value="@loginModel.Password" autocomplete="off"></InputText>
                <div class="fv-plugins-message-container invalid-feedback">
                    <ValidationMessage For="@(() => loginModel.Password)"/>
                </div>
            </div>
            <div class="text-center">
                <button type="submit" id="kt_sign_in_submit" class="btn btn-lg btn-primary w-100 mb-5">
                    @if (showLogin)
                    {
                        <span class="indicator-label">Đăng nhập</span>
                    }
                    else
                    {
                        <span class="indicator-label">Xin vui lòng đợi...</span>
                    }
                </button>

            </div>
            <div></div>
        </EditForm>
    </div>
</div>

@code {
    private bool showLogin = true;

    private LoginRequest loginModel = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var Roles = authState.User.FindAll(x => x.Type == ClaimTypes.Role).Select(x => x.Value).ToList();

            if (Roles.Contains(Permission.Branch))
            {
                navigationManager.NavigateTo("/admin-dashboard", forceLoad: true);
            }
            else
            {
                navigationManager.NavigateTo("/dashboard", forceLoad: true);
            }
        }
    }

    private async Task HandleLogin()
    {
        loginModel.RememberMe = true;
        showLogin = false;
        var result = await authService.Login(loginModel);
        if (result)
        {
            var claims = authService.GetClaims();
            if (claims != null)
            {
                if (claims.FirstOrDefault(x => x.Value == "Branch") != null)
                {
                    navigationManager.NavigateTo("/admin-dashboard", forceLoad: true);
                }
                else
                {
                    navigationManager.NavigateTo("/dashboard", forceLoad: true);
                }
                GbParameter.GbParameter.IsLogin = true;
                GbParameter.GbParameter.claims = claims;
            }
        }
        else
        {
            showLogin = true;
            ToastService.ShowError("Đăng nhập thất bại", "Thông báo");
        }
    }

}