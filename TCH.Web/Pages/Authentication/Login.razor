@page "/login"
@using System.IdentityModel.Tokens.Jwt
@using TCH.Web.Models
@using TCH.Web.Services

@inject IAuthenticationServices authenticationServices
@inject NavigationManager NavManager


<div class="d-flex flex-column flex-column-fluid bgi-position-y-bottom position-x-center bgi-no-repeat bgi-size-contain bgi-attachment-fixed" style="background-image: url('/background.jpg'); background-size:contain;background-attachment: fixed;background-size: cover;height:100vh;" >
    <div class="w-lg-500px bg-body rounded shadow-sm p-10 p-lg-15 mx-auto my-auto">
    <form class="form w-100 "  id="kt_sign_in_form" action="#">
        <div class="text-center mb-10">
            <h1 class="text-dark mb-3">Sign In to The Coffee House</h1>
            <div class="text-gray-400 fw-bold fs-4">
                New Here?
                <a href="" class="link-primary fw-bolder">Create an Account</a>
            </div>
        </div>
        <div class="fv-row mb-10 fv-plugins-icon-container">
            <label class="form-label fs-6 fw-bolder text-dark">Email</label>
            <input class="form-control form-control-lg form-control-solid" type="text" name="username" id="username" @bind-value="@request.UserName" autocomplete="off">
            <div class="fv-plugins-message-container invalid-feedback"></div>
        </div>
        <div class="fv-row mb-10 fv-plugins-icon-container">
            <div class="d-flex flex-stack mb-2">
                <label class="form-label fw-bolder text-dark fs-6 mb-0">Password</label>
                <a href="../../demo1/dist/authentication/layouts/basic/password-reset.html" class="link-primary fs-6 fw-bolder">Quên mật khẩu ?</a>
            </div>
            <input class="form-control form-control-lg form-control-solid" type="password" name="password" id="password" @bind-value="@request.Password" autocomplete="off">
            <div class="fv-plugins-message-container invalid-feedback"></div>
        </div>
        <div class="text-center">
            <button type="submit" id="kt_sign_in_submit" class="btn btn-lg btn-primary w-100 mb-5" onclick="@(() => LoginView())">
                <span class="indicator-label">Continue</span>
                <span class="indicator-progress">
                    Please wait...
                    <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                </span>
            </button>

        </div>
        <div></div>
    </form>
</div>
</div>

@code {
    private bool checkLogin { get; set; }
    public RequestLogin request{ get; set; }
    protected async override Task OnInitializedAsync()
    {
        checkLogin = false;
        request = new RequestLogin();
    }
    public bool ValidationNullInput()
    {
        if (string.IsNullOrEmpty(request.UserName) || string.IsNullOrEmpty(request.Password))
        {
            return false;
        }

        return true;
    }
    private async void LoginView()
    {
            if (checkLogin) return;
            checkLogin = true;

            if (ValidationNullInput())
            {
                var RespondLogin = await authenticationServices.Login(request);
                if (RespondLogin.Result != -1)
                {
                    var stream = GbParameters.GbParameters.RespondLogin.Data.Replace("Bearer ", "");
                    var handler = new JwtSecurityTokenHandler();
                    var jsonToken = handler.ReadToken(stream);
                    var tokenS = handler.ReadToken(stream) as JwtSecurityToken;
                    GbParameters.GbParameters.Role = tokenS.Claims.First(e => e.Type == "role")?.Value?.ToString();
                    if(GbParameters.GbParameters.Role == "Admin")
                    {
                        NavManager.NavigateTo("/admin-dashboard");
                    }
                    else
                    {
                        NavManager.NavigateTo("/dashboard");
                    }
                }
                else
                {
                    checkLogin = false;
                }
            }
            else
            {
                checkLogin = false;
            }
        
    }
}
